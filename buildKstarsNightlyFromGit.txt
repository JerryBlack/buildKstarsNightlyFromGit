#! /bin/sh
#
# FROM: https://indilib.org/forum/ekos/9709-ekos-no-longer-appears-after-a-kstars-build-last-night.html#71489
#  The indi dependencies were taken from from:  github.com/indilib/indi
#  The kstars dependencies were taken from invent.kde.org/education/kstars/-/blob/master/README.md.
#
#===============================
# Set the destination folder
#p=/media/odroid/T5_1T_SSD 
p=~
#================================================
# Set the option to build testing off by default
build_testing=-DBUILD_TESTING=OFF
#================================================

run_dependencies=
run_clone=
run_update=
run_stellarsolver=
run_indicore=
run_indi3rdpartylibs=
run_indi3rdparty=
run_kstars=
run_help=

print_help() {
 	echo ================================================================
    echo = buildKstarsNightlyFromGit.sh --- A script to clone and build Kstars/indi 
    echo =  from their respective git repositories. 
    echo =  Based Hy Murveit\'s 2021-05-22 ekos forum note
 	echo ================================================================
    echo This script accepts a single parameter from these options:
    echo 'all              - run everything'
    echo 'dependencies     - install the dependencies'
    echo 'clone            - clone the repositories'
    echo 'update           - update the repositories \(git pull\)'
    echo 'stellarsolver    - clone and install stellarsolver'
    echo 'indicore         - compile and install indi-core'
    echo 'indi3rdpartylibs - compile and install indi-3rdparty-libs'
    echo 'indi3rdparty     - compile and install indi-3rdparty'
    echo 'kstars           - compile kstars'
    echo 'help             - this message'
    exit 0
}

arg=$1
if [ $# -eq 0 ]; then
    print_help
elif [ $1 = 'all' ]; then
    run_dependencies='yes'
    run_clone='yes'
    run_update='yes'
    run_stellarsolver='yes'
    run_indicore='yes'
    run_indi3rdpartylibs='yes'
    run_indi3rdparty='yes'
    run_kstars='yes'
elif [ $arg = 'dependencies' ]; then
    run_dependencies='yes'
elif [ $arg = 'clone' ]; then
    run_clone='yes'
elif  [ $arg = 'update' ]; then
    run_update='yes'
elif [ $arg = 'stellarsolver' ]; then
    run_stellarsolver='yes'
elif  [ $arg = 'indicore' ]; then
    run_indicore='yes'
elif  [ $arg = 'indi3rdpartylibs' ]; then
    run_indi3rdpartylibs='yes'
elif  [ $arg = 'indi3rdparty' ]; then
    run_indi3rdparty='yes'
elif  [ $arg = 'kstars' ]; then
    run_kstars='yes'
else
    print_help
fi


# Install the prequisite libraries
if [ $run_dependencies ]; then
 	echo =============================================
 	echo Get the pre-requisite libraries.
	echo  Note that the release version [not this git development version built by this script] can be retained by using the
	echo  normal stable ppa version
	echo   \'sudo apt-add-repository ppa:mutlaqja/ppa\'   
	echo =============================================
    #sudo apt-add-repository ppa:mutlaqja/ppa
    #sudo apt-add-repository ppa:mutlaqja/indinightly
    sudo apt-get install -y git cmake qt5-default libcfitsio-dev libgsl-dev wcslib-dev
    sudo apt-get install -y libnova-dev libusb-1.0-0-dev zlib1g-dev  
    sudo apt-get install -y build-essential cmake git libjpeg-dev libcurl4-gnutls-dev libtiff-dev libfftw3-dev
    sudo apt=get install -y libeigen3-dev libindi-dev 
    sudo apt-get install -y extra-cmake-modules libkf5plotting-dev libqt5svg5-dev libkf5xmlgui-dev libkf5kio-dev 
    sudo apt-get install -y kinit-dev libkf5newstuff-dev kdoctools-dev libkf5notifications-dev qtdeclarative5-dev
    sudo apt-get install -y libkf5crash-dev gettext libraw-dev libkf5notifyconfig-dev 
    sudo apt-get install -y libqt5websockets5-dev xplanet xplanet-images qt5keychain-dev libsecret-1-dev
    sudo apt-get install -y breeze-icon-theme libftdi1-dev libdc1394-dev libftdi-dev 
    sudo apt-get install -y libgps-dev libraw-dev libgphoto2-dev libboost-dev libboost-regex-dev 
    sudo apt-get install -y librtlsdr-dev liblimesuite-dev libavcodec-dev libavdevice-dev
fi

# Clone the Indi and KStars source code
if [ $run_clone ]; then
	echo ==================================================
	echo Part 1: Clone the repositories
	echo ==================================================
    mkdir -p $p/Projects;
    cd $p/Projects
    git clone http://github.com/indilib/indi.git
    git clone http://github.com/indilib/indi-3rdparty.git
    git clone http://invent.kde.org/education/kstars.git
fi

# Update the Indi and KStars source code
if [ $run_update ]; then
	echo ==================================================
	echo Part 2: Update the repositories
	echo ==================================================
    cd $p/Projects/indi
    echo $p/Projects/indi
    git pull
    echo ==================================================
    cd $p/Projects/indi-3rdparty
   echo $p/Projects/indi-3rdparty
    git pull
	echo ==================================================
    cd $p/Projects/kstars
    echo $p/Projects/kstars
    git pull

fi

# Clone and install Stellarsolver
if [ $run_stellarsolver ]; then
	echo ==================================================
	echo Part 3: Stellarsolver
	echo ==================================================
    mkdir -p $p/Projects;
    cd $p/Projects
    rm -R ./stellarsolver/
    git clone https://github.com/rlancaste/stellarsolver.git
    ./stellarsolver/linux-scripts/installStellarSolverLibrary.sh
    echo Stellarsolver has been installed
fi


# Compile Indi
if [ $run_indicore ]; then
	echo ==================================================
	echo Part 4: Compile Indi
	echo ==================================================
    mkdir -p $p/Projects/build/indi-core
    cd $p/Projects/build/indi-core
    cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=RelWithDebInfo $build_testing $p/Projects/indi || exit 1
    make -j3 || exit 1
    sudo make install
fi

# Compile Indi 3rdparty Libraries
if [ $run_indi3rdpartylibs ]; then
	echo ==================================================
	echo Part 5: Compile Indi 3rdparty Libraries
	echo ==================================================
    mkdir -p $p/Projects/build/indi-3rdparty-libs
    cd $p/Projects/build/indi-3rdparty-libs
    cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=RelWithDebInfo -DBUILD_LIBS=1 $build_testing $p/Projects/indi-3rdparty || exit 1
    make -j3 || exit 1
    sudo make install
fi

# Compile Indi 3rdparty Drivers
if [ $run_indi3rdparty ]; then
	echo =================================================
	echo Part 6: Compile Indi 3rdparty Drivers
	echo =================================================
    mkdir -p $p/Projects/build/indi-3rdparty
    cd $p/Projects/build/indi-3rdparty
    #cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=RelWithDebInfo -DWITH_LIMESDR=Off  -DAHP_CORRELATOR=Off $p/Projects/indi-3rdparty
    cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=RelWithDebInfo $build_testing $p/Projects/indi-3rdparty || exit 1
    make -j3 || exit 1
    sudo make install
fi

# Compile KStars
if [ $run_kstars ]; then
	echo ==================================================
	echo Part 7: Compile KStars
	echo ==================================================
    mkdir -p $p/Projects/kstars-build
    cd $p/Projects/kstars-build
    cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCCACHE_SUPPORT=ON $build_testing  ../kstars || exit 1
    make -j3 || exit 1
    # See note below before executing the below
    #sudo make install
	echo ==============================================================
	echo = Script execution completed.
	echo =  This KStars not actually installed, which preserves any release version you may have already installed.
	echo =  To run this KStars version: $p/Projects/kstars-build/kstars/kstars
	echo =  If you wish to install this version run the following from the kstars-build directory
	echo =    sudo make install
	echo ==============================================================
	cd $p
fi

